{
  "{\"sourceRoot\":\"/Users/khalidwilliams/turing/name-app/back-end\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/khalidwilliams/turing/name-app/back-end\",\"filename\":\"/Users/khalidwilliams/turing/name-app/back-end/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/khalidwilliams/turing/name-app/back-end\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/khalidwilliams/turing/name-app/back-end",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/khalidwilliams/turing/name-app/back-end",
      "filename": "/Users/khalidwilliams/turing/name-app/back-end/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/khalidwilliams/turing/name-app/back-end",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/khalidwilliams/turing/name-app/back-end/server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/khalidwilliams/turing/name-app/back-end/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/khalidwilliams/turing/name-app/back-end",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _nodeFetch = _interopRequireDefault(require(\"node-fetch\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_dotenv.default.config();\n\nvar app = (0, _express.default)();\nvar PORT = process.env.PORT || 8080;\napp.use(_bodyParser.default.json());\napp.get('/ping', function (req, res) {\n  res.send(\"pong\");\n});\napp.get('/list-user-groups', function (req, res) {\n  var baseUrl = \"https://slack.com/api/usergroups.list\"; // const reqUrl = baseUrl+'?token='+process.env.S_SECRET;\n\n  var reqUrl = baseUrl + '?token=' + process.env.U_TOKEN;\n  console.log(reqUrl);\n  var requestData = {\n    token: process.env.SECRET\n  };\n  (0, _nodeFetch.default)(reqUrl, {\n    method: 'GET',\n    // body: new URLSearchParams(requestData),\n    headers: {\n      'Content-Type': 'application/x-www-form-urlenconded'\n    }\n  }).then(function (response) {\n    if (response.ok) {\n      // console.log(response.keys())\n      // res.status(response.status).json(response.body)\n      console.log('In first then'); // console.log(response)\n\n      return response.json();\n    } else {\n      console.log(\"I'm not ok (in first then)\");\n      var error = new Error(response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }).then(function (json) {\n    console.log(\"in second then\");\n    console.log(json);\n    res.send(json);\n  }).catch(function (error) {\n    console.log('Been caught');\n    res.status = error.statusCode;\n    console.log(error);\n  });\n}); // app.listen(PORT, () => console.log(`App running on port ${PORT}`));\n\napp.listen(8080, function () {\n  return console.log(\"App running on port 8080\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJkb3RlbnYiLCJjb25maWciLCJhcHAiLCJQT1JUIiwicHJvY2VzcyIsImVudiIsInVzZSIsImJvZHlQYXJzZXIiLCJqc29uIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZCIsImJhc2VVcmwiLCJyZXFVcmwiLCJVX1RPS0VOIiwiY29uc29sZSIsImxvZyIsInJlcXVlc3REYXRhIiwidG9rZW4iLCJTRUNSRVQiLCJtZXRob2QiLCJoZWFkZXJzIiwidGhlbiIsInJlc3BvbnNlIiwib2siLCJlcnJvciIsIkVycm9yIiwic3RhdHVzVGV4dCIsImNhdGNoIiwic3RhdHVzIiwic3RhdHVzQ29kZSIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFHQTs7QUFFQTs7QUFFQTs7OztBQU5BQSxnQkFBT0MsTUFBUDs7QUFLQSxJQUFNQyxHQUFHLEdBQUcsdUJBQVo7QUFFQSxJQUFJQyxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixJQUFaLElBQW9CLElBQS9CO0FBRUFELEdBQUcsQ0FBQ0ksR0FBSixDQUFRQyxvQkFBV0MsSUFBWCxFQUFSO0FBRUFOLEdBQUcsQ0FBQ08sR0FBSixDQUFRLE9BQVIsRUFBaUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDM0JBLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLE1BQVQ7QUFDSCxDQUZEO0FBSUFWLEdBQUcsQ0FBQ08sR0FBSixDQUFRLG1CQUFSLEVBQTZCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFhO0FBQ3RDLE1BQU1FLE9BQU8sR0FBRyx1Q0FBaEIsQ0FEc0MsQ0FFdEM7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHRCxPQUFPLEdBQUMsU0FBUixHQUFrQlQsT0FBTyxDQUFDQyxHQUFSLENBQVlVLE9BQTdDO0FBSUFDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxNQUFaO0FBQ0EsTUFBTUksV0FBVyxHQUFHO0FBQ2hCQyxJQUFBQSxLQUFLLEVBQUVmLE9BQU8sQ0FBQ0MsR0FBUixDQUFZZTtBQURILEdBQXBCO0FBSUEsMEJBQU1OLE1BQU4sRUFBYztBQUNWTyxJQUFBQSxNQUFNLEVBQUUsS0FERTtBQUVWO0FBQ0FDLElBQUFBLE9BQU8sRUFBRTtBQUNMLHNCQUFnQjtBQURYO0FBSEMsR0FBZCxFQU9DQyxJQVBELENBT00sVUFBQ0MsUUFBRCxFQUFjO0FBQ2hCLFFBQUlBLFFBQVEsQ0FBQ0MsRUFBYixFQUFpQjtBQUNiO0FBQ0E7QUFDQVQsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksZUFBWixFQUhhLENBSWI7O0FBQ0EsYUFBT08sUUFBUSxDQUFDaEIsSUFBVCxFQUFQO0FBQ0gsS0FORCxNQU1PO0FBQ0hRLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUjtBQUNBLFVBQUlTLEtBQUssR0FBRyxJQUFJQyxLQUFKLENBQVVILFFBQVEsQ0FBQ0ksVUFBbkIsQ0FBWjtBQUNBRixNQUFBQSxLQUFLLENBQUNGLFFBQU4sR0FBaUJBLFFBQWpCO0FBQ0EsWUFBTUUsS0FBTjtBQUNIO0FBQ0osR0FwQkQsRUFxQkNILElBckJELENBcUJNLFVBQUFmLElBQUksRUFBSTtBQUNWUSxJQUFBQSxPQUFPLENBQUNDLEdBQVI7QUFDQUQsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlULElBQVo7QUFDQUcsSUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVNKLElBQVQ7QUFDSCxHQXpCRCxFQTBCQ3FCLEtBMUJELENBMEJPLFVBQUFILEtBQUssRUFBSTtBQUNaVixJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxhQUFaO0FBQ0FOLElBQUFBLEdBQUcsQ0FBQ21CLE1BQUosR0FBYUosS0FBSyxDQUFDSyxVQUFuQjtBQUNBZixJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVMsS0FBWjtBQUNILEdBOUJEO0FBK0JILENBM0NELEUsQ0E4Q0E7O0FBQ0F4QixHQUFHLENBQUM4QixNQUFKLENBQVcsSUFBWCxFQUFpQjtBQUFBLFNBQU1oQixPQUFPLENBQUNDLEdBQVIsNEJBQU47QUFBQSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMva2hhbGlkd2lsbGlhbXMvdHVyaW5nL25hbWUtYXBwL2JhY2stZW5kIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRvdGVudiBmcm9tICdkb3RlbnYnO1xuZG90ZW52LmNvbmZpZygpO1xuXG5pbXBvcnQgZmV0Y2ggZnJvbSAnbm9kZS1mZXRjaCc7XG5cbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xubGV0IFBPUlQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDgwODA7XG5cbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuXG5hcHAuZ2V0KCcvcGluZycsIChyZXEsIHJlcykgPT4ge1xuICAgIHJlcy5zZW5kKFwicG9uZ1wiKVxufSlcblxuYXBwLmdldCgnL2xpc3QtdXNlci1ncm91cHMnLCAocmVxLCByZXMpID0+e1xuICAgIGNvbnN0IGJhc2VVcmwgPSBcImh0dHBzOi8vc2xhY2suY29tL2FwaS91c2VyZ3JvdXBzLmxpc3RcIjtcbiAgICAvLyBjb25zdCByZXFVcmwgPSBiYXNlVXJsKyc/dG9rZW49Jytwcm9jZXNzLmVudi5TX1NFQ1JFVDtcbiAgICBjb25zdCByZXFVcmwgPSBiYXNlVXJsKyc/dG9rZW49Jytwcm9jZXNzLmVudi5VX1RPS0VOO1xuXG4gICAgXG5cbiAgICBjb25zb2xlLmxvZyhyZXFVcmwpXG4gICAgY29uc3QgcmVxdWVzdERhdGEgPSB7XG4gICAgICAgIHRva2VuOiBwcm9jZXNzLmVudi5TRUNSRVQsXG4gICAgfVxuXG4gICAgZmV0Y2gocmVxVXJsLCB7XG4gICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgIC8vIGJvZHk6IG5ldyBVUkxTZWFyY2hQYXJhbXMocmVxdWVzdERhdGEpLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb25kZWQnXG4gICAgICAgIH1cbiAgICB9KVxuICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgICAgICBpZiAocmVzcG9uc2Uub2spIHtcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHJlc3BvbnNlLmtleXMoKSlcbiAgICAgICAgICAgIC8vIHJlcy5zdGF0dXMocmVzcG9uc2Uuc3RhdHVzKS5qc29uKHJlc3BvbnNlLmJvZHkpXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnSW4gZmlyc3QgdGhlbicpXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhyZXNwb25zZSlcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBJJ20gbm90IG9rIChpbiBmaXJzdCB0aGVuKWApXG4gICAgICAgICAgICBsZXQgZXJyb3IgPSBuZXcgRXJyb3IocmVzcG9uc2Uuc3RhdHVzVGV4dCk7XG4gICAgICAgICAgICBlcnJvci5yZXNwb25zZSA9IHJlc3BvbnNlO1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICB9KVxuICAgIC50aGVuKGpzb24gPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhgaW4gc2Vjb25kIHRoZW5gKVxuICAgICAgICBjb25zb2xlLmxvZyhqc29uKVxuICAgICAgICByZXMuc2VuZChqc29uKTtcbiAgICB9KVxuICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdCZWVuIGNhdWdodCcpXG4gICAgICAgIHJlcy5zdGF0dXMgPSBlcnJvci5zdGF0dXNDb2RlO1xuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcilcbiAgICB9KVxufSlcblxuXG4vLyBhcHAubGlzdGVuKFBPUlQsICgpID0+IGNvbnNvbGUubG9nKGBBcHAgcnVubmluZyBvbiBwb3J0ICR7UE9SVH1gKSk7XG5hcHAubGlzdGVuKDgwODAsICgpID0+IGNvbnNvbGUubG9nKGBBcHAgcnVubmluZyBvbiBwb3J0IDgwODBgKSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "dotenv",
        "config",
        "app",
        "PORT",
        "process",
        "env",
        "use",
        "bodyParser",
        "json",
        "get",
        "req",
        "res",
        "send",
        "baseUrl",
        "reqUrl",
        "U_TOKEN",
        "console",
        "log",
        "requestData",
        "token",
        "SECRET",
        "method",
        "headers",
        "then",
        "response",
        "ok",
        "error",
        "Error",
        "statusText",
        "catch",
        "status",
        "statusCode",
        "listen"
      ],
      "mappings": ";;AAAA;;AAGA;;AAEA;;AAEA;;;;AANAA,gBAAOC,MAAP;;AAKA,IAAMC,GAAG,GAAG,uBAAZ;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAA/B;AAEAD,GAAG,CAACI,GAAJ,CAAQC,oBAAWC,IAAX,EAAR;AAEAN,GAAG,CAACO,GAAJ,CAAQ,OAAR,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3BA,EAAAA,GAAG,CAACC,IAAJ,CAAS,MAAT;AACH,CAFD;AAIAV,GAAG,CAACO,GAAJ,CAAQ,mBAAR,EAA6B,UAACC,GAAD,EAAMC,GAAN,EAAa;AACtC,MAAME,OAAO,GAAG,uCAAhB,CADsC,CAEtC;;AACA,MAAMC,MAAM,GAAGD,OAAO,GAAC,SAAR,GAAkBT,OAAO,CAACC,GAAR,CAAYU,OAA7C;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,MAAMI,WAAW,GAAG;AAChBC,IAAAA,KAAK,EAAEf,OAAO,CAACC,GAAR,CAAYe;AADH,GAApB;AAIA,0BAAMN,MAAN,EAAc;AACVO,IAAAA,MAAM,EAAE,KADE;AAEV;AACAC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAHC,GAAd,EAOCC,IAPD,CAOM,UAACC,QAAD,EAAc;AAChB,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb;AACA;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAHa,CAIb;;AACA,aAAOO,QAAQ,CAAChB,IAAT,EAAP;AACH,KAND,MAMO;AACHQ,MAAAA,OAAO,CAACC,GAAR;AACA,UAAIS,KAAK,GAAG,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,UAAnB,CAAZ;AACAF,MAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,YAAME,KAAN;AACH;AACJ,GApBD,EAqBCH,IArBD,CAqBM,UAAAf,IAAI,EAAI;AACVQ,IAAAA,OAAO,CAACC,GAAR;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACAG,IAAAA,GAAG,CAACC,IAAJ,CAASJ,IAAT;AACH,GAzBD,EA0BCqB,KA1BD,CA0BO,UAAAH,KAAK,EAAI;AACZV,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAN,IAAAA,GAAG,CAACmB,MAAJ,GAAaJ,KAAK,CAACK,UAAnB;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACH,GA9BD;AA+BH,CA3CD,E,CA8CA;;AACAxB,GAAG,CAAC8B,MAAJ,CAAW,IAAX,EAAiB;AAAA,SAAMhB,OAAO,CAACC,GAAR,4BAAN;AAAA,CAAjB",
      "sourceRoot": "/Users/khalidwilliams/turing/name-app/back-end",
      "sourcesContent": [
        "import dotenv from 'dotenv';\ndotenv.config();\n\nimport fetch from 'node-fetch';\n\nimport express from 'express';\nconst app = express();\nimport bodyParser from 'body-parser';\nlet PORT = process.env.PORT || 8080;\n\napp.use(bodyParser.json());\n\napp.get('/ping', (req, res) => {\n    res.send(\"pong\")\n})\n\napp.get('/list-user-groups', (req, res) =>{\n    const baseUrl = \"https://slack.com/api/usergroups.list\";\n    // const reqUrl = baseUrl+'?token='+process.env.S_SECRET;\n    const reqUrl = baseUrl+'?token='+process.env.U_TOKEN;\n\n    \n\n    console.log(reqUrl)\n    const requestData = {\n        token: process.env.SECRET,\n    }\n\n    fetch(reqUrl, {\n        method: 'GET',\n        // body: new URLSearchParams(requestData),\n        headers: {\n            'Content-Type': 'application/x-www-form-urlenconded'\n        }\n    })\n    .then((response) => {\n        if (response.ok) {\n            // console.log(response.keys())\n            // res.status(response.status).json(response.body)\n            console.log('In first then')\n            // console.log(response)\n            return response.json()\n        } else {\n            console.log(`I'm not ok (in first then)`)\n            let error = new Error(response.statusText);\n            error.response = response;\n            throw error;\n        }\n    })\n    .then(json => {\n        console.log(`in second then`)\n        console.log(json)\n        res.send(json);\n    })\n    .catch(error => {\n        console.log('Been caught')\n        res.status = error.statusCode;\n        console.log(error)\n    })\n})\n\n\n// app.listen(PORT, () => console.log(`App running on port ${PORT}`));\napp.listen(8080, () => console.log(`App running on port 8080`));"
      ]
    },
    "sourceType": "script",
    "mtime": 1553272837421
  }
}